"use strict";(self.webpackChunkstablecraft_io=self.webpackChunkstablecraft_io||[]).push([[9379],{2476:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"code-examples/metamask-integration","title":"Metamask Integration","description":"MetaMask is the most widely used browser wallet for Ethereum and EVM-compatible blockchains. Integrating MetaMask into your app lets users easily connect their wallet, approve transactions, and interact with smart contracts or stablecoin transfers\u2014all with just a few clicks.","source":"@site/docs/code-examples/metamask-integration.mdx","sourceDirName":"code-examples","slug":"/code-examples/metamask-integration","permalink":"/kb/code-examples/metamask-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/johnpottergr/stablecraft.io/edit/main/docs/code-examples/metamask-integration.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"metamask-integration","title":"Metamask Integration","sidebar_position":3},"sidebar":"kbSidebar","previous":{"title":"Hedera Payment Demo","permalink":"/kb/code-examples/hedera-payment-demo"},"next":{"title":"Sample API Requests","permalink":"/kb/code-examples/sample-api-requests"}}');var a=t(4848),o=t(8453);const r={id:"metamask-integration",title:"Metamask Integration",sidebar_position:3},i=void 0,c={},l=[{value:"Before you start",id:"before-you-start",level:3},{value:"Connect MetaMask and request wallet access",id:"connect-metamask-and-request-wallet-access",level:3},{value:"Get network information",id:"get-network-information",level:3},{value:"Sending stablecoins (ERC-20)",id:"sending-stablecoins-erc-20",level:3},{value:"Adding networks (optional)",id:"adding-networks-optional",level:3},{value:"Next steps",id:"next-steps",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["MetaMask is the most widely used browser wallet for Ethereum and EVM-compatible blockchains. Integrating MetaMask into your app lets users easily connect their wallet, approve transactions, and interact with smart contracts or stablecoin transfers\u2014all with just a few clicks.\nHere, we cover how to connect MetaMask using ",(0,a.jsx)(n.code,{children:"window.ethereum"}),", request access to user accounts, and detect the selected network and address."]}),"\n",(0,a.jsx)(n.h3,{id:"before-you-start",children:"Before you start"}),"\n",(0,a.jsx)(n.p,{children:"You\u2019ll need:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A web app or frontend project (React, Next.js, or vanilla JS all work)"}),"\n",(0,a.jsx)(n.li,{children:"MetaMask installed in the browser (or the MetaMask mobile app with WebView)"}),"\n",(0,a.jsx)(n.li,{children:"A network that supports the stablecoin you\u2019re using (e.g., USDC on Ethereum, Polygon, or Arbitrum)"}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," MetaMask injects the ",(0,a.jsx)(n.code,{children:"window.ethereum"})," object into the browser, which your app can use to interact with the blockchain."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"connect-metamask-and-request-wallet-access",children:"Connect MetaMask and request wallet access"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"async function connectMetaMask() {\n  if (typeof window.ethereum === 'undefined') {\n    alert('MetaMask is not installed');\n    return;\n  }\n\n  try {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    const userAddress = accounts[0];\n    console.log('Connected address:', userAddress);\n  } catch (err) {\n    console.error('User rejected connection or other error:', err);\n  }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:'Call this function when a user clicks a "Connect Wallet" button in your app.'}),"\n",(0,a.jsx)(n.h3,{id:"get-network-information",children:"Get network information"}),"\n",(0,a.jsx)(n.p,{children:"Once connected, you can retrieve the active network\u2019s chain ID to determine which network the user is on (e.g., Ethereum Mainnet, Polygon, etc.)."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"const chainId = await window.ethereum.request({ method: 'eth_chainId' });\nconsole.log('Connected to chain:', chainId);\n"})}),"\n",(0,a.jsx)(n.p,{children:"To listen for changes in network or account, you can subscribe to events:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"window.ethereum.on('accountsChanged', (accounts) => {\n  console.log('New account:', accounts[0]);\n});\n\nwindow.ethereum.on('chainChanged', (chainId) => {\n  window.location.reload(); // Reload to re-init app logic if needed\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"sending-stablecoins-erc-20",children:"Sending stablecoins (ERC-20)"}),"\n",(0,a.jsx)(n.p,{children:"Once MetaMask is connected, you can use web3.js or ethers.js to send tokens like USDC. See the Web3.js Send USDC guide for a full example."}),"\n",(0,a.jsx)(n.p,{children:"Just remember:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ERC-20 tokens require contract interaction (not native value: transfers)"}),"\n",(0,a.jsx)(n.li,{children:"You'll need the contract address and ABI"}),"\n",(0,a.jsx)(n.li,{children:"USDC uses 6 decimals, not 18"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"adding-networks-optional",children:"Adding networks (optional)"}),"\n",(0,a.jsx)(n.p,{children:"If your app works on a network MetaMask doesn\u2019t have by default (like Arbitrum or Base), you can prompt the user to add it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"await window.ethereum.request({\n  method: 'wallet_addEthereumChain',\n  params: [{\n    chainId: '0xa4b1', // Arbitrum One\n    chainName: 'Arbitrum One',\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n    blockExplorerUrls: ['https://arbiscan.io']\n  }]\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:"You can also request a network switch if the user is on the wrong chain:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"await window.ethereum.request({\n  method: 'wallet_switchEthereumChain',\n  params: [{ chainId: '0xa4b1' }] // Arbitrum One\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"next-steps",children:"Next steps"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Web3.js Send USDC \u2013 Full example of sending stablecoins via smart contract"}),"\n",(0,a.jsx)(n.li,{children:"Wallets for Teams \u2013 Learn how to scale access across internal roles"}),"\n",(0,a.jsx)(n.li,{children:"Handling Business Funds \u2013 Organize wallet flows for stablecoin payments"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var s=t(6540);const a={},o=s.createContext(a);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);